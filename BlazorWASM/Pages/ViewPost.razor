@page "/ViewPost/{id:int}"
@attribute [Authorize]
@using Shared
@using HttpClients.ClientInterfaces
@using Microsoft.AspNetCore.Components
@using System.Security.AccessControl
@using global::Shared.DTOs
@using global::Shared.Models
@inject IPostService postService
@inject IUserService userService
@inject NavigationManager navMgr

<div class="card">
    @if (dto == null)
    {
        <label>Loading post data...</label>
    }
    else
    {
        <h3>View Post #@dto.Id</h3>
        <tr>
            <td class="label" style="font-weight: bold; color: darkred">User:</td>
            <td class="content" style="color: darkred">@username</td>
        </tr>
        <tr>
            <td class="label" style="font-weight: bold; color: darkblue">Title:</td>
            <td class="content">@dto.Title</td>
        </tr>
        <tr>
            <td class="label" style="font-weight: bold; color: darkgreen">Body:</td>
            <td class="content">@dto.Body</td>
        </tr>
    }
    @if (!string.IsNullOrEmpty(msg))
    {
        <label style="color: red">@msg</label>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    
    private PostBasicDto dto;
    private string msg = "";
    private string username = "";

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("LoadData started");
        msg = "";
        try
        {
            PostBasicDto postData = await postService.GetByIdAsync(Id);
            dto = new PostBasicDto(postData.PosterId, postData.Title, postData.Body);
            dto.Id = Id;

            User user = await userService.GetUserByIdAsync(dto.PosterId);
            username = user.Username;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
        Console.WriteLine("LoadData completed");
    }
}